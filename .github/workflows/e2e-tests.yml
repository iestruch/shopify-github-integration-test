name: e2e-tests
on:
  pull_request:
  workflow_dispatch:
jobs:
  tests_e2e:
    name: Run end-to-end tests
    runs-on: ubuntu-latest
    environment: LHCI
    env:
      E2E_SHOP_URL: ${{ secrets.E2E_SHOP_URL }}
      E2E_SHOP_PASS: ${{ secrets.E2E_SHOP_PASS }}
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1
          bundler: "latest"
      - name: Install Shopify CLI
        run: npm install -g @shopify/cli @shopify/theme
      - name: Deploy
        env:
          SHOPIFY_FLAG_STORE: "${{ secrets.SHOPIFY_STORE }}"
          SHOPIFY_CLI_THEME_TOKEN: ${{ secrets.SHOPIFY_CLI_THEME_TOKEN }}
          SHOPIFY_CLI_TTY: 0
        shell: bash
        run: |
          theme_push_log="$(mktemp)"
          shopify theme push --path . --development --json --password ${{env.SHOPIFY_CLI_THEME_TOKEN}} > "$theme_push_log" && cat "$theme_push_log"
          preview_url="$(cat "$theme_push_log" | tail -n 1 | jq -r '.theme.preview_url')"
          preview_id="$(cat "$theme_push_log" | tail -n 1 | jq -r '.theme.id')"
          echo "url=$preview_url">>$GITHUB_ENV
          echo "theme_id=$preview_id">>$GITHUB_ENV
      - name: Install dependencies
        run: npm ci
      - name: Install playwright browsers
        run: npx playwright install --with-deps
      - name: Run E2E tests
        env:
          E2E_SHOP_URL: "${{ env.url }}"
        run: npx playwright test --config .config/playwright.config.ts
      - name: Clean up development theme
        shell: bash
        env:
          SHOPIFY_FLAG_STORE: "${{ secrets.SHOPIFY_STORE }}"
          SHOPIFY_CLI_THEME_TOKEN: ${{ secrets.SHOPIFY_CLI_THEME_TOKEN }}
          SHOPIFY_CLI_TTY: 0
        run: shopify theme delete -d -f --theme ${{env.theme_id}}

